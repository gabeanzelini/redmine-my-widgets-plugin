<% sidebar_queries.each do |query|
	query = Query.find(query.id) # Necessary as sidebar_queries doesn't correctly initialize filters
%>
	<h3><%= query.name %></h3>
	<%= render :partial => 'issues/list_simple', :locals => { :issues => Issue.find(:all, :include => [:status, :project], :conditions => query.statement) } %>
<% end %>

<table class="list queries">		
	<thead>
		<tr>
			<th><%=l(:label_query)%></th>
			<th><%=l(:label_issue_plural)%></th>
		</tr>
	</thead>
	<tbody>	
    <%
    visible = ARCondition.new(["is_public = ? OR user_id = ?", true, (User.current.logged? ? User.current.id : 0)])
    @sidebar_queries = Query.find(:all, {
      :select => 'id, name',
      :order => "name ASC",
      :conditions => visible.conditions,
    })
  %>
    <% @sidebar_queries.each do |query|
			query = Query.find(query.id) # Necessary as sidebar_queries doesn't correctly initialize filters
			issue_count = Issue.count(:include => [:status, :project], :conditions => query.statement)
		%>
			<tr class="<%= cycle('odd', 'even') %> <%= 'empty' if issue_count == 0 %>">
        <td class="query"><%= link_to(h(query.name), :controller => 'issues', :action => 'index', :project_id => query.project, :query_id => query) %></td>
        <td style="text-align: center;" class="count"><%= issue_count %></td>
			</tr>
		<% end %>
	</tbody>
</table>

<% content_for :header_tags do %>
    <%= stylesheet_link_tag 'my_widgets', :plugin => 'redmine_my_widgets' %>
<% end %>